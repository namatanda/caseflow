name: Frontend Deploy

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-deploy.yml"
  workflow_dispatch:

jobs:
  test-build-push:
    name: Test, Build & Publish Frontend Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run unit tests
        working-directory: frontend
        run: npm run test -- --runInBand

      - name: Build production assets
        working-directory: frontend
        run: npm run build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}

  deploy:
    name: Deploy Frontend
    needs: test-build-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && secrets.FRONTEND_DEPLOY_HOST != '' }}
    environment:
      name: production

    steps:
      - name: Deploy static site container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.FRONTEND_DEPLOY_HOST }}
          username: ${{ secrets.FRONTEND_DEPLOY_USER }}
          key: ${{ secrets.FRONTEND_DEPLOY_KEY }}
          port: ${{ secrets.FRONTEND_DEPLOY_PORT || '22' }}
          envs: IMAGE_TAG=${{ github.sha }}
          script: |
            docker login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"
            cd ${{ secrets.FRONTEND_DEPLOY_PATH }}
            docker compose pull frontend
            docker compose up -d frontend
            docker image prune -f
