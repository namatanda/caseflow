name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: courtflow_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test -d courtflow_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://test:test@localhost:5432/courtflow_test
      REDIS_URL: redis://localhost:6379/1
      JWT_SECRET: test-jwt-secret-key-that-is-long-enough-for-testing-purposes
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      API_VERSION: v1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Generate Prisma client
        run: |
          cd backend
          npx prisma generate

      - name: Run backend lint
        run: |
          cd backend
          npm run lint

      - name: Run backend tests
        run: |
          cd backend
          npm run test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend lint
        run: |
          cd frontend
          npm run lint

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test -- --run

      - name: Build frontend bundle
        run: |
          cd frontend
          npm run build

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/